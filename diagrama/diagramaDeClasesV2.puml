@startuml name prototipoTP

abstract class Vehiculo{
    -numMatricula: number
    -estado: EstadoVehiculo
    -kilometros: number
    -logicaTarifa: Tarifa

    --Getters_Y_Setters--
}

class Sedan extends Vehiculo{}
class Suv extends Vehiculo{}
class Compacto extends Vehiculo{}

interface Tarifa{
    calcularTarifa(reserva: Reserva): number
}

class tarifaSuv implements Tarifa{}

class tarifaCompacto implements Tarifa{}

class tarifaSedan implements Tarifa{}

class Reserva{
    -idReserva: number
    -fechaInicio: Fecha
    -fechaFinalizacion: Fecha
    -vehiculo: Vehiculo
    -kmIniciales: number
    -kmFinales: number
    -calculadoraKilometros: CalcularKilometros

    --Getters_Y_Setters--
    +calcularCantidadDias(): number
    +calcularPrecioReserva(): number
}

class CalcularKilometros{
    +promedioKmDiarios(dias: number, kilometros: number)
    +calcularKmTotales(kmIniciales: number, kmFinales: number)
}

enum EstadoVehiculo{
    EN_MANTENIMIENTO,
    DISPONIBLE,
    EN_ALQUILER,
    NECESITA_LIMPIEZA,
}

class GestionAlquiler{
    -vehiculos: Map<matricula: number, vehiculo>
    -reservas: Map<idReserva: number,Reserva>
    -verificadorDisponibulidad: Disponibilidad

    --Getters_Y_Setters--
    +procesarReserva(reserva: Reserva): boolean
    +entregarVehiculo(reserva: Reserva): void
    +recibirVehiculo(reserva: Reserva): void
}

class Disponibilidad{
    +estaDisponible(reserva: Reserva, Reserva[]): boolean
}


' Relaciones
Vehiculo *-- Tarifa
GestionAlquiler *-- Vehiculo
Disponibilidad *-- Reserva
Reserva *-- CalcularKilometros
GestionAlquiler *-- Disponibilidad
GestionAlquiler <-- Reserva

@enduml

