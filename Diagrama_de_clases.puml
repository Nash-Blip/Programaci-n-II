@startuml practico

class GestionAlquiler{
    - vehiculo[]: Vehiculo
    - reservas[]: Reserva
    + crearReserva(reserva: Reserva): Reserva
    + verificarDisponibilidad(reserva: Reserva): boolean
    + calcularKilometraje(reserva: Reserva): number
    + solicitarTarifa(reserva: Reserva): number
}

enum EstadoVehiculo {
  DISPONIBLE
  EN_ALQUILER
  EN_MANTENIMIENTO
  NECESITA_LIMPIEZA
}

class Cliente{
    - id: number
    - nombre: string
    + pedirReserva(inicio: string, fin: string, gestion: GestionAlquiler): Reserva
}

class Reserva{
    - inicio: string
    - fin: string
    - cliente: Cliente
    - vehiculo: Vehiculo
    - kminicial: number
    - kmFinal: number
}

abstract class Vehiculo{
    - numMatricula: number
    - marcaAuto: string
    - kilometro: number
    - estado: EstadoVehiculo
}

class Compacto extends Vehiculo
class Sedan extends Vehiculo
class SUV extends Vehiculo

abstract class Tarifa{
    - tarifaBase: number
    + calcularReserva(reserva: Reserva): number
}

class TarifaCompacto extends Tarifa
class TarifaSUV extends Tarifa
class TarifaSedan extends Tarifa

GestionAlquiler o-r- Vehiculo
GestionAlquiler o-l- Reserva
Reserva --> Tarifa
Reserva --> Vehiculo
Reserva *-- Cliente

note right of TarifaCompacto::calcularReserva
Base: $30 * días
+ exceso si >100km/día
end note

note right of TarifaSedan::calcularReserva
Base: $50 * días
+ $0.20 por km total
end note

note right of TarifaSUV::calcularReserva
Base: ($80 + $15 seguro) * días
+ exceso si >500 km total
end note

@enduml
