@startuml practico

class GestionAlquiler{
    - vehiculo[]: Vehiculo
    - fechaReserva[]: Cliente
    - kmDiario: number
    - kilometro: number
    + setters_y_getters()
    + calcularKilometraje()
    + verificarVehiculo()
    + verificarEstado()
    + solicitarTarifa()
}

abstract class Estado{
    - fechaInicio: string
    - fechaFin: string
}

class Mantenimiento{
    + fechaMantenimiento(fechaInicio: number, fechaFin: number)
}

class Limpieza{
    + fechaLimpieza(fechaInicio: number, fechaFin: number)
}
class Alquiler{
    + fechaAlquiler(fechaInicio: number, fechaFin: number)
}

class Disponible{ 
    + fechaDisponible(fechaInicio: number, fechaFin: number)
}

class Cliente{
    - fechaInicio: number
    - fechaFin: number
    - vehiculo: Vehiculo
    + reserva(fechaInicio: number, fechaFin: number, vehiculo: Vehiculo)
}

abstract class Vehiculo{
    - numMatricula: number
    - marcaAuto: string
    - kilometro: number
}

class Compacto extends Vehiculo{

}

class Sedan extends Vehiculo{

}

class SUV extends Vehiculo{

}

abstract class Tarifa{
    - tarifaBase: number
    - kilometrajeInicial: number
    - kilometrajeFinal: number
    - kmDia[]: number
    + calcularTarifa()
}

class TarifaCompacto extends Tarifa{

}
class TarifaSUV extends Tarifa{

}
class TarifaSedan extends Tarifa{

}

Vehiculo *-u- Estado
GestionAlquiler *-r- Cliente
GestionAlquiler *-l- Vehiculo
GestionAlquiler *-d- Tarifa
Estado <|-l- Mantenimiento
Estado <|-l- Limpieza
Estado <|-r- Disponible
Estado <|-r- Alquiler

note left of Vehiculo::calculoTarifa
compacto:
    const base = 30 * dias;
Sedan:
    exceso = 0.25 * kilometro;
    const base = (50 * dias) + exceso;
    
SUV:
    const base = 95 * dias;
end note
note right of GestionAlquiler::vehiculo[]
    marca
    matricula
    tarifa
    estado
end note
@enduml
